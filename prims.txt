import java.util.Scanner;

public class PrimsAlgorithm {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        System.out.print("Enter the number of nodes: ");
        int n = scanner.nextInt();

        int[][] cost = new int[n][n];
        int[] visited = new int[n];
        int mincost = 0;

        System.out.println("Enter the adjacency matrix:");
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                cost[i][j] = scanner.nextInt();
                if (cost[i][j] == 0) cost[i][j] = Integer.MAX_VALUE; // Use a large value to represent infinity
            }
        }

        visited[0] = 1;

        for (int edges = 0; edges < n - 1; edges++) {
            int min = Integer.MAX_VALUE;
            int a = -1, b = -1;

            for (int i = 0; i < n; i++) {
                if (visited[i] == 1) {
                    for (int j = 0; j < n; j++) {
                        if (visited[j] == 0 && cost[i][j] < min) {
                            min = cost[i][j];
                            a = i;
                            b = j;
                        }
                    }
                }
            }

            if (a != -1 && b != -1) {
                System.out.printf("Edge %d: (%d, %d) cost: %d\n", edges + 1, a + 1, b + 1, min);
                mincost += min;
                visited[b] = 1;
            }
        }

        System.out.println("Minimum cost = " + mincost);
        scanner.close();
    }
}
